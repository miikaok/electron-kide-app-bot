!function(){AbortSignal.timeout??=function(e){const t=new AbortController;return setTimeout((()=>t.close()),e),t.signal};const e=e=>{if("string"!==typeof e||0===e.length)throw new Error("Invalid inventoryId. Must be a non-empty string.");const t=e.replace(/-/g,""),r="2ad64e4b26c84fbabba58181de76f7b0";if(32!==t.length)throw new Error("Length of strippedId and EXTRA_ID must be the same.");let n="";for(let s=0;s<t.length;s++){const e=t.charCodeAt(s)^r.charCodeAt(s);n+=String.fromCharCode(e)}return btoa(n).substring(0,10)},t=async({bearerToken:t,requestTimeout:r=5e3,variant:n,useCustomCount:s=!1,ticketBuyCount:a=0}={})=>{try{const o=Math.min(n.availability,n.productVariantMaximumReservableQuantity);if(0===o)return self.postMessage({type:"buy_failed"});const i=await(async({bearerToken:e,requestTimeout:t=5e3})=>{try{const r=await fetch("https://api.kide.app/api/reservations",{method:"GET",headers:{Authorization:`Bearer ${e}`,cache:"no-cache"},signal:AbortSignal.timeout(t)});if(r.ok){const e=await r.json(),t=e.model?.reservations;return null==t?[]:t.map((e=>e.inventoryId))}console.error(`Error fetching reservations: ${r.status} ${r.statusText}`)}catch(r){console.error("An error occurred while fetching reservations:",r)}return null})({bearerToken:t,requestTimeout:r});if(null===i||"undefined"===typeof i)return self.postMessage({type:"request_error"});if(self.postMessage({type:"request_success"}),i.includes(n.inventoryId))return self.postMessage({type:"in_cart"});const u=s?Math.min(a,o):o,l=await(async({bearerToken:t,inventoryId:r,quantity:n,requestTimeout:s})=>(await fetch("https://api.kide.app/api/reservations",{method:"POST",headers:{"Content-Type":"application/json;charset=UTF-8",accept:"application/json, text/plain, */*","x-requested-id":e(r),Authorization:`Bearer ${t}`},body:JSON.stringify({expectCart:!0,toCancel:null,toCreate:[{inventoryId:r,quantity:n}]}),signal:AbortSignal.timeout(s)})).ok)({bearerToken:t,inventoryId:n.inventoryId,quantity:u,requestTimeout:r});if(!l)return self.postMessage({type:"buy_failed"});self.postMessage({type:"buy_success"})}catch(o){console.error("An error occurred while processing the shopping request:",o),self.postMessage({type:"buy_failed"})}},r=(e,r,n)=>{for(const s of e){const{value:e}=s,a=r.find((t=>t.name.toLowerCase().includes(e.toLowerCase())));if(null!=a)return self.postMessage({type:"buy_attempt",value:a.name}),t({...n,variant:a}),!0}return!1};self.addEventListener("message",(({data:{eventID:e,threadDelay:n,requestTimeout:s,strictPriority:a,priorityItems:o,bearerToken:i,useCustomCount:u,ticketBuyCount:l}})=>{setInterval((async()=>{const n=await(async(e,t=5e3)=>{try{const r=await fetch(`https://api.kide.app/api/products/${e}`,{method:"GET",headers:{"cache-control":"no-cache"},signal:AbortSignal.timeout(t)});if(r.ok)return r.json()}catch(r){return console.error(`Error fetching event data for eventID ${e}:`,r),null}})(e,s);if(self.postMessage({type:"request_start"}),null===n)return self.postMessage({type:"request_error"});const c=n.model.variants.filter((e=>new Date(e.dateSalesFrom)<new Date&&e.availability>0));if(0===c.length)return self.postMessage({type:"no_available_variants"});if(o.length>0){if(!r(o,c,{bearerToken:i,requestTimeout:s,useCustomCount:u,ticketBuyCount:l})&&a)return self.postMessage({type:"strict_skip"})}const p=Math.floor(Math.random()*c.length);return self.postMessage({type:"buy_attempt",value:c[p].name}),t({bearerToken:i,requestTimeout:s,variant:c[p],useCustomCount:u,ticketBuyCount:l})}),n)}))}();
//# sourceMappingURL=thread.worker.275bd7af.worker.js.map