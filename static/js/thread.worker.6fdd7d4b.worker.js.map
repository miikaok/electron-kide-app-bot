{"version":3,"file":"static/js/thread.worker.6fdd7d4b.worker.js","mappings":"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","sources":["logic/thread.worker.js"],"sourcesContent":["AbortSignal.timeout ??= function timeout(ms) {\r\n  const ctrl = new AbortController();\r\n  setTimeout(() => ctrl.close(), ms);\r\n  return ctrl.signal;\r\n};\r\n\r\nconst getEventData = async (eventID, requestTimeout) => {\r\n  try {\r\n    const response = await fetch(`https://api.kide.app/api/products/${eventID}`, {\r\n      method: \"GET\",\r\n      caches: \"no-cache\",\r\n      signal: AbortSignal.timeout(requestTimeout),\r\n    });\r\n    if (response.status === 200) return response.json();\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst getReservationData = async (bearerToken, requestTimeout) => {\r\n  try {\r\n    const response = await fetch(\"https://api.kide.app/api/reservations\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${bearerToken}`,\r\n        caches: \"no-cache\",\r\n      },\r\n      signal: AbortSignal.timeout(requestTimeout),\r\n    });\r\n    if (response.status === 200) {\r\n      const r = await response.json();\r\n      if (r.model?.reservations == null) return [];\r\n      const itemsInCart = r.model.reservations.map((r) => r.inventoryId);\r\n      return itemsInCart;\r\n    }\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst shop = async (bearerToken, requestTimeout, variant, useCustomCount, ticketBuyCount) => {\r\n  const maxReservationCount =\r\n    variant.availability >= variant.productVariantMaximumReservableQuantity\r\n      ? variant.productVariantMaximumReservableQuantity\r\n      : variant.availability;\r\n\r\n  if (maxReservationCount === 0) {\r\n    self.postMessage({ type: \"buy_failed\" });\r\n    return;\r\n  }\r\n\r\n  const cart = await getReservationData(bearerToken, requestTimeout);\r\n\r\n  if (cart === null) {\r\n    self.postMessage({ type: \"request_error\" });\r\n    return;\r\n  }\r\n\r\n  self.postMessage({ type: \"request_success\" });\r\n\r\n  if (cart.includes(variant.inventoryId)) {\r\n    self.postMessage({ type: \"in_cart\" });\r\n    return;\r\n  }\r\n\r\n  const quantity = useCustomCount\r\n    ? ticketBuyCount <= maxReservationCount\r\n      ? ticketBuyCount\r\n      : maxReservationCount\r\n    : maxReservationCount;\r\n\r\n  const response = await fetch(\"https://api.kide.app/api/reservations\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${bearerToken}`,\r\n      caches: \"no-cache\",\r\n    },\r\n    body: JSON.stringify({\r\n      toCancel: [],\r\n      toCreate: [\r\n        {\r\n          inventoryId: variant.inventoryId,\r\n          productVariantUserForm: null,\r\n          quantity: quantity,\r\n        },\r\n      ],\r\n    }),\r\n    signal: AbortSignal.timeout(requestTimeout),\r\n  });\r\n\r\n  if (response.status === 200) {\r\n    self.postMessage({ type: \"buy_success\" });\r\n    return;\r\n  }\r\n  self.postMessage({ type: \"buy_failed\" });\r\n  return;\r\n};\r\n\r\nconst handleMessage = (event) => {\r\n  const {\r\n    eventID,\r\n    threadDelay,\r\n    requestTimeout,\r\n    strictPriority,\r\n    priorityItems,\r\n    bearerToken,\r\n    useCustomCount,\r\n    ticketBuyCount,\r\n  } = event.data;\r\n\r\n  setInterval(async () => {\r\n    const response = await getEventData(eventID, requestTimeout);\r\n\r\n    self.postMessage({ type: \"request_start\" });\r\n\r\n    if (response === null) {\r\n      self.postMessage({ type: \"request_error\" });\r\n      return;\r\n    }\r\n\r\n    const event = response.model;\r\n\r\n    const availableVariants = event.variants.filter((variant) => {\r\n      return variant.isProductVariantActive;\r\n    });\r\n\r\n    // If there are no matches, return\r\n    if (availableVariants.length === 0) {\r\n      self.postMessage({ type: \"no_available_variants\" });\r\n      return;\r\n    }\r\n\r\n    // Handle priority items\r\n    if (priorityItems.length > 0) {\r\n      priorityItems.forEach((item) => {\r\n        const { value } = item;\r\n        const variant = availableVariants.find((variant) =>\r\n          variant.name.toLowerCase().includes(value.toLowerCase())\r\n        );\r\n        if (variant != null) {\r\n          self.postMessage({ type: \"buy_attempt\", value: variant.name });\r\n          return shop(bearerToken, requestTimeout, variant, useCustomCount, ticketBuyCount);\r\n        }\r\n      });\r\n      // If strict priority is enabled, return\r\n      if (strictPriority) {\r\n        self.postMessage({ type: \"strict_skip\" });\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Select a random variant of there are no priority items\r\n    const variantId = Math.floor(Math.random() * availableVariants.length);\r\n    self.postMessage({\r\n      type: \"buy_attempt\",\r\n      value: availableVariants[variantId].name,\r\n    });\r\n    return shop(\r\n      bearerToken,\r\n      requestTimeout,\r\n      availableVariants[variantId],\r\n      useCustomCount,\r\n      ticketBuyCount\r\n    );\r\n  }, threadDelay);\r\n};\r\n\r\nself.addEventListener(\"message\", handleMessage);\r\n"],"names":["AbortSignal","timeout","ms","ctrl","AbortController","setTimeout","close","signal","shop","async","bearerToken","requestTimeout","variant","useCustomCount","ticketBuyCount","maxReservationCount","availability","productVariantMaximumReservableQuantity","self","postMessage","type","cart","response","fetch","method","headers","Authorization","caches","status","r","json","model","reservations","map","inventoryId","error","getReservationData","includes","quantity","body","JSON","stringify","toCancel","toCreate","productVariantUserForm","addEventListener","event","eventID","threadDelay","strictPriority","priorityItems","data","setInterval","getEventData","availableVariants","variants","filter","isProductVariantActive","length","forEach","item","value","find","name","toLowerCase","variantId","Math","floor","random"],"sourceRoot":""}