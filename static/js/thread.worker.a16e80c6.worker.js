!function(){AbortSignal.timeout??=function(e){const t=new AbortController;return setTimeout((()=>t.close()),e),t.signal};const e=async({bearerToken:e,requestTimeout:t=5e3,variant:r,useCustomCount:s=!1,ticketBuyCount:n=0}={})=>{try{const o=Math.min(r.availability,r.productVariantMaximumReservableQuantity);if(0===o)return self.postMessage({type:"buy_failed"});const a=await(async({bearerToken:e,requestTimeout:t=5e3})=>{try{const r=await fetch("https://api.kide.app/api/reservations",{method:"GET",headers:{Authorization:`Bearer ${e}`,cache:"no-cache"},signal:AbortSignal.timeout(t)});if(r.ok){const e=await r.json(),t=e.model?.reservations;return null==t?[]:t.map((e=>e.inventoryId))}console.error(`Error fetching reservations: ${r.status} ${r.statusText}`)}catch(r){console.error("An error occurred while fetching reservations:",r)}return null})({bearerToken:e,requestTimeout:t});if(null===a||"undefined"===typeof a)return self.postMessage({type:"request_error"});if(self.postMessage({type:"request_success"}),a.includes(r.inventoryId))return self.postMessage({type:"in_cart"});const i=s?Math.min(n,o):o,u=await(async({bearerToken:e,inventoryId:t,quantity:r,requestTimeout:s})=>(await fetch("https://api.kide.app/api/reservations",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`,cache:"no-cache"},body:JSON.stringify({toCancel:[],toCreate:[{inventoryId:t,productVariantUserForm:null,quantity:String(r)}]}),signal:AbortSignal.timeout(s)})).ok)({bearerToken:e,inventoryId:r.inventoryId,quantity:i,requestTimeout:t});if(!u)return self.postMessage({type:"buy_failed"});self.postMessage({type:"buy_success"})}catch(o){console.error("An error occurred while processing the shopping request:",o),self.postMessage({type:"buy_failed"})}},t=(t,r,s)=>{for(const n of t){const{value:t}=n,o=r.find((e=>e.name.toLowerCase().includes(t.toLowerCase())));if(null!=o)return self.postMessage({type:"buy_attempt",value:o.name}),e({...s,variant:o}),!0}return!1};self.addEventListener("message",(({data:{eventID:r,threadDelay:s,requestTimeout:n,strictPriority:o,priorityItems:a,bearerToken:i,useCustomCount:u,ticketBuyCount:c}})=>{setInterval((async()=>{const s=await(async(e,t=5e3)=>{try{const r=await fetch(`https://api.kide.app/api/products/${e}`,{method:"GET",headers:{"cache-control":"no-cache"},signal:AbortSignal.timeout(t)});if(r.ok)return r.json()}catch(r){return console.error(`Error fetching event data for eventID ${e}:`,r),null}})(r,n);if(self.postMessage({type:"request_start"}),null===s)return self.postMessage({type:"request_error"});const l=s.model.variants.filter((e=>e.isProductVariantActive));if(0===l.length)return self.postMessage({type:"no_available_variants"});if(a.length>0){if(!t(a,l,{bearerToken:i,requestTimeout:n,useCustomCount:u,ticketBuyCount:c})&&o)return self.postMessage({type:"strict_skip"})}const p=Math.floor(Math.random()*l.length);return self.postMessage({type:"buy_attempt",value:l[p].name}),e({bearerToken:i,requestTimeout:n,variant:l[p],useCustomCount:u,ticketBuyCount:c})}),s)}))}();
//# sourceMappingURL=thread.worker.a16e80c6.worker.js.map